esphome:
  name: geekmagic-smalltv-01
  friendly_name: geekmagic-smalltv-01
  platformio_options:
    board_build.f_cpu: 160000000L
  on_boot:
    - priority: 600
      then:
        - delay: 1s
        - output.turn_on: pwm_output
        - output.set_level:
            id: pwm_output
            level: 50%

esp8266:
  board: esp12e

external_components:
  - source:
      type: git
      url: https://github.com/lhartmann/esphome-st7789v-fractional-framebuffer
      ref: main
    refresh: 0s
    components: [st7789v]

# Enable logging
logger:

# Home Assistant API
api:
  # prevent reboots in case the connection to HA is lost or the device is used standalone
  reboot_timeout: 0s
#  encryption:
#    key: !secret api_key

ota:
  - platform: esphome
    password: !secret ota_password

wifi:
  id: default_wifi
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  on_connect:
    then:
      # workaround as there is no initial value for the icon sensor
      - lambda: id(wifi_signal_icon).publish_state("\U000F16BD"); // wifi check

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: !secret ap_ssid
    password: !secret ap_password

captive_portal:
  id: my_portal

time:
  - platform: sntp
    id: sntp_time
    timezone: Europe/Berlin
    servers:
     - 0.pool.ntp.org
     - 1.pool.ntp.org
     - 2.pool.ntp.org

font:
  - id: roboto_16
    file: "gfonts://Roboto"
    size: 16
  - id: terminus14n
    file: fonts/terminus-font-4.49.1/ter-u14n.bdf
  - id: spleen64
    file:
      type: web
      url: https://raw.githubusercontent.com/fcambus/spleen/refs/heads/master/spleen-32x64.bdf
    glyphs: "0123456789:"
  - id: icon_font_20
    file:
      type: web
      url: https://cdn.jsdelivr.net/npm/@mdi/font@7.4.47/fonts/materialdesignicons-webfont.ttf
    size: 20
    glyphs:
      - "\U000F0003" # mdi-access-point
      - "\U000F05A9" # mdi-wifi
      - "\U000F091F" # mdi-wifi-strength-1
      - "\U000F0922" # mdi-wifi-strength-2
      # - "\U000F0925" # mdi-wifi-strength-3 -- skipping to have a bigger step between 2 and full
      # - "\U000F0928" # mdi-wifi-strength-4 -- skipping as we use the wifi icon itself
      - "\U000F092B" # mdi-wifi-strength-alert-outline
      - "\U000F092E" # mdi-wifi-strength-off-outline
      - "\U000F16BD" # mdi-wifi-check

sensor:
  - platform: uptime
    name: Uptime
    entity_category: diagnostic
  - platform: wifi_signal
    name: WiFi Signal
    id: wifi_signal_db
    on_value:
      # ---- Text sensor to expose the current WiFi status icon ----
      lambda: |-
        // computed current wifi status icon
        auto computed_icon = "";

        int8_t rssi = id(wifi_signal_db).state;

        // based on the logic in https://github.com/esphome/esphome/blob/7394cbf77329f3b5a035e5ce334c9ac0ae19818c/esphome/components/wifi/wifi_component.cpp#L417
        if (rssi >= -50) {
          computed_icon = "\U000F05A9"; // wifi icon (full)
        } else if (rssi >= -65) {
          computed_icon = "\U000F0922"; // 2 bars
        } else  if (rssi >= -85) {
          computed_icon = "\U000F091F"; // 1 bar
        } else {
          computed_icon = "\U000F092B"; // 0 bars with alert
        }

        // publish only on change
        if (id(wifi_signal_icon).state != computed_icon) {
          id(wifi_signal_icon).publish_state(computed_icon);
        }

text_sensor:
  - platform: wifi_info
    ip_address:
      name: "IP Address"
      id: wifi_ip_address
      entity_category: diagnostic
  - platform: template
    id: wifi_signal_icon
    name: "WiFi Signal Strength Icon"

image:
  - id: bg_image
    file: https://lcsvh.com/ironman.png
    type: rgb565
    resize: 240x240

spi:
  clk_pin: GPIO14
  mosi_pin: GPIO13
  interface: hardware
  id: spihwd

output:
  - id: pwm_output
    platform: esp8266_pwm
    pin: GPIO05
    inverted: true
    frequency: 1000 Hz

light:
  - platform: monochromatic
    output: pwm_output
    name: "Backlight"

color:
  - id: color_ironman_red
    hex: eb1c24
  - id: color_ironman_yellow
    hex: fcb712

interval:
  - interval: 5s
    then:
      - component.update: my_display

display:
  - id: my_display
    platform: st7789v
    model: custom
    spi_id: spihwd
    height: 240
    width: 240
    offset_height: 0
    offset_width: 0
    fragmentation: 30
    dc_pin: GPIO00
    reset_pin: GPIO02
    eightbitcolor: False
    update_interval: never
    spi_mode: mode3
    data_rate: 40000000
    auto_clear_enabled: False
    pages:
      - id: page_clock
        lambda: |-
          // Store screen dimensions
          int W = it.get_width();
          int H = it.get_height();

          // Background image (also replaces autoclear)
          it.image(0, 0, id(bg_image), ImageAlign::TOP_LEFT);

          auto now = id(sntp_time).now();
          if (now.is_valid()) {
            it.printf( +11,  12, id(spleen64),  id(color_ironman_red),    TextAlign::TOP_LEFT,     "%02d", now.hour);
            it.printf(W-11,  12, id(spleen64),  id(color_ironman_yellow), TextAlign::TOP_RIGHT,    "%02d", now.minute);

            it.printf( W/2, H-4, id(roboto_16), id(color_ironman_yellow), TextAlign::BOTTOM_CENTER, "%02d-%02d", now.day_of_month, now.month);
          }

          // ---- WiFi status icon ----
          // compute wifi status icon based on connection state and signal strength
          auto wifi_status_color = id(color_ironman_yellow);
          auto wifi_status_icon = "";
          if (id(my_portal).is_active()) {
            wifi_status_icon = "\U000F0003"; // access point icon
          } else if (id(default_wifi).is_connected()) {
            // connected: use the current signal strength icon
            wifi_status_icon = id(wifi_signal_icon).state.c_str();
          } else {
              // not connected: show wifi off icon
              wifi_status_icon = "\U000F092E"; // wifi off icon
              wifi_status_color = id(color_ironman_red);
          }

          it.printf(W-3, H-7, id(icon_font_20), wifi_status_color, TextAlign::BOTTOM_RIGHT, wifi_status_icon);
          if (id(default_wifi).is_connected()) {
            it.printf(3, H-7, id(terminus14n), id(color_ironman_red), TextAlign::BOTTOM_LEFT, id(wifi_ip_address).state.c_str());
          }
